import { useEffect, useState, useSyncExternalStore } from "react";
const emptyFn = () => {
}, emptyFnFn = () => emptyFn;
function useDidFinishSSR(value, options) {
  if (options?.sync)
    return useSyncExternalStore(
      emptyFnFn,
      () => value ?? !0,
      () => !1
    );
  const [cur, setCur] = useState(value);
  return useEffect(() => {
    setCur(value ?? !0);
  }, []), cur ?? !1;
}
function useDidFinishSSRSync(value) {
  return useDidFinishSSR(value, {
    sync: !0
  });
}
function useClientValue(value) {
  return useDidFinishSSR() ? typeof value == "function" ? value() : value : void 0;
}
export {
  useClientValue,
  useDidFinishSSR,
  useDidFinishSSRSync
};
//# sourceMappingURL=index.js.map
