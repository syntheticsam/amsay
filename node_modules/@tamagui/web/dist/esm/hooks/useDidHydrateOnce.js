import { useEffect } from "react";
let didHydrateOnce = !1;
function useDidHydrateOnceRoot() {
  process.env.TAMAGUI_DISABLE_HYDRATION_OPTIMIZATION || useEffect(() => {
    const tm = setInterval(() => {
      Date.now() - last > 150 && (didHydrateOnce = !0, clearInterval(tm));
    }, 16);
    return () => {
      clearInterval(tm);
    };
  }, []);
}
let last = Date.now();
function useDidHydrateOnce() {
  return process.env.TAMAGUI_DISABLE_HYDRATION_OPTIMIZATION ? !1 : (didHydrateOnce || (last = Date.now()), didHydrateOnce);
}
export {
  useDidHydrateOnce,
  useDidHydrateOnceRoot
};
//# sourceMappingURL=useDidHydrateOnce.js.map
